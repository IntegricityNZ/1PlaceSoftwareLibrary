# NGINX Plus configuration for enhanced load balancing of JBoss
# Application Servers
#
# The configuration file should be saved to /etc/nginx/conf.d/jboss.conf.
# In the main /etc/nginx/nginx.conf file ensure that the following line is
# present in the http {...} block:
# include /etc/nginx/conf.d/*.conf;
#
# For more information, see http://nginx.org/r/include, and the 'Using NGINX
# to Load Balance JBoss Application Servers' deployment guide at
# http://www.nginx.com/
#
# For support please see http://www.nginx.com/support/
#
# Tested with NGINX Plus R7
#
# Nov 12, 2015
# Version 1.0

proxy_cache_path /data/nginx/testapi/ keys_zone=testapi.1placeonline.com:10m;
proxy_cache_path /data/nginx/testapi-jwks levels=1 keys_zone=testapi.1placeonline.com.jwk_cache:1m max_size=10m;

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

upstream apinorthamerica {
    # Health-monitored upstream groups must have a zone defined
    zone jboss2 64k;

    # List of Jboss Application Servers
    server us-testapi1.1placeonline.com:8080 slow_start=30s;

    # Session Persistence based on JSESSION ID, if necessary
    sticky learn
        create=$upstream_cookie_JSESSIONID
        lookup=$cookie_JSESSIONID
        zone=apina_client_sessions:1m;
}

upstream apipacific {
    # Health-monitored upstream groups must have a zone defined
    zone jboss2 64k;

    # List of Jboss Application Servers
    server testapi1.1placeonline.com:8080 slow_start=30s;

    # Session Persistence based on JSESSION ID, if necessary
    sticky learn
        create=$upstream_cookie_JSESSIONID
        lookup=$cookie_JSESSIONID
        zone=apipa_client_sessions20:1m;
}

# handle token
auth_jwt_claim_set $jwt_roles realm_access roles;
map $jwt_roles:$jwt_claim_region $apiregion {
        "~\bna\b" apinorthamerica; # Appears within word boundaries (\b) of CSV list
        "~\bpa\b" apipacific; # Appears within word boundaries (\b) of CSV list
        default  apipacific;
}
map $http_authorization $access_token {
    "~*^Bearer (.*)$" $1;
    default $arg_access_token;
}

server {
    listen 80;
    server_name testapi.1placeonline.com;
    status_zone http://testapi.1placeonline.com;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    status_zone https://testapi.1placeonline.com;
    server_name     testapi.1placeonline.com;
    ssl_certificate     /etc/ssl/certs/ssl-1placeonline_com-bundle.crt;
    ssl_certificate_key /etc/ssl/keys/secure.1placeonline.com.key;
    access_log /var/log/nginx/access-testapi.log jwtapi;
    error_log /var/log/nginx/error-testapi.log;
    ssl_protocols TLSv1.3 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-GCM-SHA256;
    ssl_session_cache shared:TLS:2m;

    ## OCSP Stapling
    #resolver 127.0.0.1 status_zone=testapi.1placeonline.com-resolver;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/ssl/certs/STAR_1placeonline_com.crt;

    location /v1/ {
        proxy_set_header Authorization $http_authorization;
        proxy_pass_header Authorization;

        proxy_set_header   Host      $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://apipacific/user-rest-api/resources/;
        health_check;
    }

    location /v2/ {
        return 404 '{"success":false,"data":"404 Page not found.. v2 is now deprecated,  Please use the lastest api v3"}';
    }

    location /v3/ {
        limit_except OPTIONS {
            auth_jwt "1Place Realm" token=$access_token;
            auth_jwt_key_request  /jwks_uri;
        }
        proxy_set_header Authorization $http_authorization;
        proxy_pass_header Authorization;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://$apiregion/mobile-rest-api$request_uri;
        proxy_intercept_errors on;
        # only proxy the following
        error_page 401 /401.json;
        error_page 500 /500.json;
        error_page 502 /502.json;
        error_page 503 /503.json;
        error_page 504 /504.json;
    }

    # save the jwt certs in the local cache
    location /jwks_uri {
        internal;
        proxy_method GET;
        proxy_cache testapi.1placeonline.com.jwk_cache;
        proxy_pass https://testlogin.1placeonline.com/realms/1Place/protocol/openid-connect/certs;
        proxy_cache_valid 200 12h;                    # How long to consider keys "fresh"
        proxy_cache_use_stale error timeout updating; # Use old JWK Set if cannot reach IdP
        proxy_ssl_server_name on;                     # For SNI to the IdP
        proxy_set_header Content-Length "";           # ''
        proxy_ignore_headers Cache-Control Expires Set-Cookie; # Does not influence caching
    }
    location @hc-apipacific {
        proxy_pass http://apipacific;
        health_check;
    }
    location @hc-apinorthamerica {
        proxy_pass http://apinorthamerica;
        health_check;
    }
    error_page 401 /401.json;
    location /401.json {
        return 401 '{"success":false,"data":"401 Unauthorized"}';
    }
    error_page 500 /500.json;
        location /500.json {
        return 500 '{"success":false,"data":"500 Internal Server Error"}';
    }

    error_page 502 /502.json;
        location /502.json {
        return 502 '{"success":false,"data":"502 Bad Gateway"}';
    }

    error_page 503 /503.json;
       location /503.json {
       return 503 '{"success":false,"data":"503 Service Temporarily Unavailable"}';
    }

    error_page 504 /504.json;
        location /504.json {
        return 504 '{"success":false,"data":"504 Bad Timeout"}';
    }
    client_max_body_size        60M;
    proxy_connect_timeout       300;
    proxy_send_timeout          300;
    proxy_read_timeout          300;
    send_timeout                300;
    http2_chunk_size            300k;
}